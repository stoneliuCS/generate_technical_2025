// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.920
package static

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func ChallengePage() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!doctype html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Challenge</title><style>\n\t\t\t* {\n\t\t\t\tmargin: 0;\n\t\t\t\tpadding: 0;\n\t\t\t\tbox-sizing: border-box;\n\t\t\t}\n\t\t\t\n\t\t\tbody {\n\t\t\t\tfont-family: \"SF Mono\", \"Monaco\", \"Cascadia Code\", \"Roboto Mono\", \"Consolas\", \"Courier New\", monospace;\n\t\t\t\tbackground: linear-gradient(135deg, #0c0c0c 0%, #1a1a2e 50%, #16213e 100%);\n\t\t\t\tcolor: #00ff88;\n\t\t\t\tmin-height: 100vh;\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tjustify-content: center;\n\t\t\t\tfont-size: 1.1rem;\n\t\t\t\tpadding: 2rem;\n\t\t\t\tposition: relative;\n\t\t\t\toverflow: hidden;\n\t\t\t}\n\t\t\t\n\t\t\tbody::before {\n\t\t\t\tcontent: '';\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t\t\t\tright: 0;\n\t\t\t\tbottom: 0;\n\t\t\t\tbackground-image: \n\t\t\t\t\tradial-gradient(circle at 20% 80%, rgba(0, 255, 136, 0.1) 0%, transparent 50%),\n\t\t\t\t\tradial-gradient(circle at 80% 20%, rgba(0, 191, 255, 0.1) 0%, transparent 50%),\n\t\t\t\t\tradial-gradient(circle at 40% 40%, rgba(138, 43, 226, 0.1) 0%, transparent 50%);\n\t\t\t\tanimation: pulse 4s ease-in-out infinite alternate;\n\t\t\t\tpointer-events: none;\n\t\t\t}\n\t\t\t\n\t\t\t@keyframes pulse {\n\t\t\t\t0% { opacity: 0.3; }\n\t\t\t\t100% { opacity: 0.7; }\n\t\t\t}\n\t\t\t\n\t\t\t@keyframes glow {\n\t\t\t\t0%, 100% { \n\t\t\t\t\tbox-shadow: \n\t\t\t\t\t\t0 0 20px rgba(0, 255, 136, 0.3),\n\t\t\t\t\t\t0 0 40px rgba(0, 255, 136, 0.2),\n\t\t\t\t\t\t0 0 60px rgba(0, 255, 136, 0.1),\n\t\t\t\t\t\tinset 0 0 20px rgba(0, 255, 136, 0.1);\n\t\t\t\t}\n\t\t\t\t50% { \n\t\t\t\t\tbox-shadow: \n\t\t\t\t\t\t0 0 30px rgba(0, 255, 136, 0.4),\n\t\t\t\t\t\t0 0 50px rgba(0, 255, 136, 0.3),\n\t\t\t\t\t\t0 0 80px rgba(0, 255, 136, 0.2),\n\t\t\t\t\t\tinset 0 0 30px rgba(0, 255, 136, 0.15);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t@keyframes textGlow {\n\t\t\t\t0%, 100% { \n\t\t\t\t\ttext-shadow: 0 0 10px rgba(0, 255, 136, 0.8), 0 0 20px rgba(0, 255, 136, 0.4);\n\t\t\t\t}\n\t\t\t\t50% { \n\t\t\t\t\ttext-shadow: 0 0 15px rgba(0, 255, 136, 1), 0 0 30px rgba(0, 255, 136, 0.6);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t@keyframes codeGlow {\n\t\t\t\t0%, 100% { \n\t\t\t\t\tbox-shadow: \n\t\t\t\t\t\t0 0 15px rgba(0, 191, 255, 0.3),\n\t\t\t\t\t\tinset 0 0 15px rgba(0, 191, 255, 0.1);\n\t\t\t\t}\n\t\t\t\t50% { \n\t\t\t\t\tbox-shadow: \n\t\t\t\t\t\t0 0 25px rgba(0, 191, 255, 0.4),\n\t\t\t\t\t\tinset 0 0 25px rgba(0, 191, 255, 0.15);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t.card {\n\t\t\t\ttext-align: start;\n\t\t\t\tpadding: 3rem;\n\t\t\t\tbackground: linear-gradient(135deg, rgba(0, 0, 0, 0.8) 0%, rgba(26, 26, 46, 0.9) 100%);\n\t\t\t\tborder-radius: 20px;\n\t\t\t\tborder: 2px solid rgba(0, 255, 136, 0.5);\n\t\t\t\tmax-width: 1000px;\n\t\t\t\twidth: 100%;\n\t\t\t\theight: calc(100vh - 4rem);\n\t\t\t\tline-height: 1.6;\n\t\t\t\tposition: relative;\n\t\t\t\tanimation: glow 3s ease-in-out infinite;\n\t\t\t\tbackdrop-filter: blur(10px);\n\t\t\t\toverflow-y: auto;\n\t\t\t}\n\t\t\t\n\t\t\th1 { \n\t\t\t\tfont-size: 2.2rem; \n\t\t\t\tmargin-bottom: 2rem;\n\t\t\t\tmargin-top: 1rem;\n\t\t\t\tcolor: #00ff88;\n\t\t\t\tanimation: textGlow 2s ease-in-out infinite;\n\t\t\t\ttext-transform: uppercase;\n\t\t\t\tletter-spacing: 2px;\n\t\t\t\tfont-weight: bold;\n\t\t\t}\n\t\t\t\n\t\t\tp { \n\t\t\t\tfont-size: 1.2rem;\n\t\t\t\tcolor: #a0ffcc;\n\t\t\t\tmargin-bottom: 1.5rem;\n\t\t\t\ttext-shadow: 0 0 5px rgba(0, 255, 136, 0.3);\n\t\t\t}\n\t\t\t\n\t\t\th2 {\n\t\t\t\tfont-size: 1.6rem;\n\t\t\t\tmargin-top: 2rem;\n\t\t\t\tmargin-bottom: 1rem;\n\t\t\t\tcolor: #00bfff;\n\t\t\t\ttext-shadow: 0 0 8px rgba(0, 191, 255, 0.6);\n\t\t\t\ttext-transform: uppercase;\n\t\t\t\tletter-spacing: 1px;\n\t\t\t}\n\t\t\t\n\t\t\th3 {\n\t\t\t\tfont-size: 1.4rem;\n\t\t\t\tmargin-top: 1.5rem;\n\t\t\t\tmargin-bottom: 0.75rem;\n\t\t\t\tcolor: #8a2be2;\n\t\t\t\ttext-shadow: 0 0 8px rgba(138, 43, 226, 0.6);\n\t\t\t\ttext-transform: uppercase;\n\t\t\t}\n\n\t\t\th4 {\n\t\t\t\tfont-size: 1.2rem;\n\t\t\t\tmargin-top: 1rem;\n\t\t\t\tmargin-bottom: 0.75rem;\n\t\t\t\tcolor: #2a8be1;\n\t\t\t\ttext-shadow: 0 0 8px rgba(138, 43, 226, 0.6);\n\t\t\t\ttext-transform: uppercase;\n\t\t\t}\n\t\t\t\n\t\t\tpre {\n\t\t\t\tbackground: linear-gradient(135deg, rgba(0, 0, 0, 0.9) 0%, rgba(13, 13, 26, 0.95) 100%);\n\t\t\t\tborder: 1px solid rgba(0, 191, 255, 0.4);\n\t\t\t\tborder-radius: 12px;\n\t\t\t\tpadding: 1.5rem;\n\t\t\t\tmargin: 2rem 0;\n\t\t\t\ttext-align: left;\n\t\t\t\toverflow-x: auto;\n\t\t\t\tposition: relative;\n\t\t\t\tanimation: codeGlow 4s ease-in-out infinite;\n\t\t\t}\n\t\t\t\n\t\t\tcode {\n\t\t\t\tfont-family: \"SF Mono\", \"Monaco\", \"Cascadia Code\", \"Roboto Mono\", \"Consolas\", \"Courier New\", monospace;\n\t\t\t\tcolor: #00ff88;\n\t\t\t\ttext-shadow: 0 0 3px rgba(0, 255, 136, 0.5);\n\t\t\t\tline-height: 1.4;\n\t\t\t}\n\t\t\t\n\t\t\t.keyword {\n\t\t\t\tcolor: #ff6b9d;\n\t\t\t\ttext-shadow: 0 0 5px rgba(255, 107, 157, 0.6);\n\t\t\t}\n\t\t\t\n\t\t\t.string {\n\t\t\t\tcolor: #ffd700;\n\t\t\t\ttext-shadow: 0 0 5px rgba(255, 215, 0, 0.6);\n\t\t\t}\n\t\t\t\n\t\t\t.comment {\n\t\t\t\tcolor: #8a2be2;\n\t\t\t\ttext-shadow: 0 0 5px rgba(138, 43, 226, 0.6);\n\t\t\t\tfont-style: italic;\n\t\t\t}\n\t\t\t\n\t\t\t.function {\n\t\t\t\tcolor: #00bfff;\n\t\t\t\ttext-shadow: 0 0 5px rgba(0, 191, 255, 0.6);\n\t\t\t}\n      a {\n\t\t\t\tcolor: #00ff88;\n\t\t\t\ttext-decoration: none;\n\t\t\t\tposition: relative;\n\t\t\t\tpadding: 0.5rem 1rem;\n\t\t\t\tborder: 1px solid rgba(0, 255, 136, 0.4);\n\t\t\t\tborder-radius: 8px;\n\t\t\t\tbackground: linear-gradient(135deg, rgba(0, 255, 136, 0.1) 0%, rgba(0, 191, 255, 0.1) 100%);\n\t\t\t\ttext-shadow: 0 0 5px rgba(0, 255, 136, 0.8);\n\t\t\t\tletter-spacing: 1px;\n\t\t\t\ttext-transform: uppercase;\n\t\t\t\tfont-weight: bold;\n\t\t\t\ttransition: all 0.3s ease;\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tmargin: 1rem 0;\n\t\t\t}\n\t\t\t\n\t\t\ta:hover {\n\t\t\t\tcolor: #fff;\n\t\t\t\tbackground: linear-gradient(135deg, rgba(0, 255, 136, 0.3) 0%, rgba(0, 191, 255, 0.3) 100%);\n\t\t\t\tborder-color: rgba(0, 255, 136, 0.8);\n\t\t\t\tbox-shadow: \n\t\t\t\t\t0 0 20px rgba(0, 255, 136, 0.4),\n\t\t\t\t\t0 0 40px rgba(0, 255, 136, 0.2),\n\t\t\t\t\tinset 0 0 10px rgba(0, 255, 136, 0.1);\n\t\t\t\ttext-shadow: 0 0 10px rgba(0, 255, 136, 1);\n\t\t\t\ttransform: translateY(-2px);\n\t\t\t}\n\t\t\t\n\t\t\ta:active {\n\t\t\t\ttransform: translateY(0px);\n\t\t\t\tbox-shadow: \n\t\t\t\t\t0 0 15px rgba(0, 255, 136, 0.6),\n\t\t\t\t\tinset 0 0 5px rgba(0, 255, 136, 0.2);\n\t\t\t}\n\t\t\t\n\t\t\ta::before {\n\t\t\t\tcontent: '◊ ';\n\t\t\t\tcolor: #00bfff;\n\t\t\t\ttext-shadow: 0 0 8px rgba(0, 191, 255, 0.8);\n\t\t\t}\n\t\t\t\n\t\t\ta::after {\n\t\t\t\tcontent: ' ◊';\n\t\t\t\tcolor: #00bfff;\n\t\t\t\ttext-shadow: 0 0 8px rgba(0, 191, 255, 0.8);\n\t\t\t}\n\t\t</style></head><body><div class=\"card\"><h1>Generate Technical Member Challenge Fall 2025</h1><p>You are tasked with completing one technical deliverable for your Generate Software Engineer interview. The deliverable consists of completing one technical challenge prior to your interview, and then conducting a walkthrough of your solution during your interview. Your walkthrough must include screensharing of your code, you may be asked to submit your solution, and you are not expected to prepare additional visuals or writings.</p><h2>Algorithmic Challenge</h2><p>Aliens are attacking our hometown! It is up to you as the commander to protect your home from being destroyed by the alien invasion.</p><h3>Technical Specification</h3><p>Our intelligence agencies have been able to identify the key characteristics of the impending aliens and have relayed them to you.</p><p>ALIEN is a JSON Object with HP and ATK. </p><p>ALIEN_INVASION is a JSON ARRAY of ALIEN. </p><p>POWER is the sum of the ALIEN remaining HP and ATK. </p><h4>A Command is one of </h4><p>\"volley\" - Targets the number of aliens sorted by POWER decided by taking the remaining HP modulo the remaining number of aliens, dealing 1 HP.</p><p>\"focusedVolley\" - Targets the ceiling of half of the remaining aliens sorted by POWER, dealing 2 HP.</p><p>\"focusedShot\" - Targets the alien with the highest POWER, killing them instantly.</p><h4>Additional Specifications </h4><p>An Invasion is over if and only if your remaining HP &le; 0 or there are no more invading aliens left.</p><p>the primary goal is to kill the most amount of invading aliens before the invasion concludes while maximizing your remaining hp left over.</p><div style=\"text-align: center;\"><a href=\"/\">Find the API Specification Here.</a></div></div></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
