// Code generated by ogen, DO NOT EDIT.

package api

import (
	"io"

	"github.com/go-faster/errors"
	"github.com/google/uuid"
)

type APIV1AliensGetOK struct {
	Waves  []Alien `json:"waves"`
	Budget int     `json:"budget"`
	Health int     `json:"health"`
}

// GetWaves returns the value of Waves.
func (s *APIV1AliensGetOK) GetWaves() []Alien {
	return s.Waves
}

// GetBudget returns the value of Budget.
func (s *APIV1AliensGetOK) GetBudget() int {
	return s.Budget
}

// GetHealth returns the value of Health.
func (s *APIV1AliensGetOK) GetHealth() int {
	return s.Health
}

// SetWaves sets the value of Waves.
func (s *APIV1AliensGetOK) SetWaves(val []Alien) {
	s.Waves = val
}

// SetBudget sets the value of Budget.
func (s *APIV1AliensGetOK) SetBudget(val int) {
	s.Budget = val
}

// SetHealth sets the value of Health.
func (s *APIV1AliensGetOK) SetHealth(val int) {
	s.Health = val
}

// Successfully returned response.
type APIV1RegisterPostCreated struct {
	Message OptString `json:"message"`
	Token   OptUUID   `json:"token"`
}

// GetMessage returns the value of Message.
func (s *APIV1RegisterPostCreated) GetMessage() OptString {
	return s.Message
}

// GetToken returns the value of Token.
func (s *APIV1RegisterPostCreated) GetToken() OptUUID {
	return s.Token
}

// SetMessage sets the value of Message.
func (s *APIV1RegisterPostCreated) SetMessage(val OptString) {
	s.Message = val
}

// SetToken sets the value of Token.
func (s *APIV1RegisterPostCreated) SetToken(val OptUUID) {
	s.Token = val
}

type APIV1RegisterPostReq struct {
	// Must be a valid Northeastern email address.
	Email string `json:"email"`
	// Valid nuid.
	Nuid string `json:"nuid"`
}

// GetEmail returns the value of Email.
func (s *APIV1RegisterPostReq) GetEmail() string {
	return s.Email
}

// GetNuid returns the value of Nuid.
func (s *APIV1RegisterPostReq) GetNuid() string {
	return s.Nuid
}

// SetEmail sets the value of Email.
func (s *APIV1RegisterPostReq) SetEmail(val string) {
	s.Email = val
}

// SetNuid sets the value of Nuid.
func (s *APIV1RegisterPostReq) SetNuid(val string) {
	s.Nuid = val
}

// Ref: #/components/schemas/alien
type Alien struct {
	HP  int `json:"HP"`
	ATK int `json:"ATK"`
	SPD int `json:"SPD"`
}

// GetHP returns the value of HP.
func (s *Alien) GetHP() int {
	return s.HP
}

// GetATK returns the value of ATK.
func (s *Alien) GetATK() int {
	return s.ATK
}

// GetSPD returns the value of SPD.
func (s *Alien) GetSPD() int {
	return s.SPD
}

// SetHP sets the value of HP.
func (s *Alien) SetHP(val int) {
	s.HP = val
}

// SetATK sets the value of ATK.
func (s *Alien) SetATK(val int) {
	s.ATK = val
}

// SetSPD sets the value of SPD.
func (s *Alien) SetSPD(val int) {
	s.SPD = val
}

type GetOK struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s GetOK) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, io.EOF
	}
	return s.Data.Read(p)
}

type HealthcheckGetOK struct {
	Message OptHealthcheckGetOKMessage `json:"message"`
}

// GetMessage returns the value of Message.
func (s *HealthcheckGetOK) GetMessage() OptHealthcheckGetOKMessage {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *HealthcheckGetOK) SetMessage(val OptHealthcheckGetOKMessage) {
	s.Message = val
}

type HealthcheckGetOKMessage string

const (
	HealthcheckGetOKMessageOK HealthcheckGetOKMessage = "OK"
)

// AllValues returns all HealthcheckGetOKMessage values.
func (HealthcheckGetOKMessage) AllValues() []HealthcheckGetOKMessage {
	return []HealthcheckGetOKMessage{
		HealthcheckGetOKMessageOK,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s HealthcheckGetOKMessage) MarshalText() ([]byte, error) {
	switch s {
	case HealthcheckGetOKMessageOK:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *HealthcheckGetOKMessage) UnmarshalText(data []byte) error {
	switch HealthcheckGetOKMessage(data) {
	case HealthcheckGetOKMessageOK:
		*s = HealthcheckGetOKMessageOK
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// NewOptAPIV1RegisterPostReq returns new OptAPIV1RegisterPostReq with value set to v.
func NewOptAPIV1RegisterPostReq(v APIV1RegisterPostReq) OptAPIV1RegisterPostReq {
	return OptAPIV1RegisterPostReq{
		Value: v,
		Set:   true,
	}
}

// OptAPIV1RegisterPostReq is optional APIV1RegisterPostReq.
type OptAPIV1RegisterPostReq struct {
	Value APIV1RegisterPostReq
	Set   bool
}

// IsSet returns true if OptAPIV1RegisterPostReq was set.
func (o OptAPIV1RegisterPostReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAPIV1RegisterPostReq) Reset() {
	var v APIV1RegisterPostReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAPIV1RegisterPostReq) SetTo(v APIV1RegisterPostReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAPIV1RegisterPostReq) Get() (v APIV1RegisterPostReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAPIV1RegisterPostReq) Or(d APIV1RegisterPostReq) APIV1RegisterPostReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptHealthcheckGetOKMessage returns new OptHealthcheckGetOKMessage with value set to v.
func NewOptHealthcheckGetOKMessage(v HealthcheckGetOKMessage) OptHealthcheckGetOKMessage {
	return OptHealthcheckGetOKMessage{
		Value: v,
		Set:   true,
	}
}

// OptHealthcheckGetOKMessage is optional HealthcheckGetOKMessage.
type OptHealthcheckGetOKMessage struct {
	Value HealthcheckGetOKMessage
	Set   bool
}

// IsSet returns true if OptHealthcheckGetOKMessage was set.
func (o OptHealthcheckGetOKMessage) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptHealthcheckGetOKMessage) Reset() {
	var v HealthcheckGetOKMessage
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptHealthcheckGetOKMessage) SetTo(v HealthcheckGetOKMessage) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptHealthcheckGetOKMessage) Get() (v HealthcheckGetOKMessage, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptHealthcheckGetOKMessage) Or(d HealthcheckGetOKMessage) HealthcheckGetOKMessage {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUUID returns new OptUUID with value set to v.
func NewOptUUID(v uuid.UUID) OptUUID {
	return OptUUID{
		Value: v,
		Set:   true,
	}
}

// OptUUID is optional uuid.UUID.
type OptUUID struct {
	Value uuid.UUID
	Set   bool
}

// IsSet returns true if OptUUID was set.
func (o OptUUID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUUID) Reset() {
	var v uuid.UUID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUUID) SetTo(v uuid.UUID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUUID) Get() (v uuid.UUID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUUID) Or(d uuid.UUID) uuid.UUID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}
