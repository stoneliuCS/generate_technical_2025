// Code generated by ogen, DO NOT EDIT.

package api

import (
	"io"
	"net/url"

	"github.com/go-faster/errors"
	"github.com/google/uuid"
)

type APIV1ChallengeBackendIDAliensGetInternalServerError struct {
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *APIV1ChallengeBackendIDAliensGetInternalServerError) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *APIV1ChallengeBackendIDAliensGetInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*APIV1ChallengeBackendIDAliensGetInternalServerError) aPIV1ChallengeBackendIDAliensGetRes() {}

type APIV1ChallengeBackendIDAliensGetNotFound struct {
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *APIV1ChallengeBackendIDAliensGetNotFound) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *APIV1ChallengeBackendIDAliensGetNotFound) SetMessage(val string) {
	s.Message = val
}

func (*APIV1ChallengeBackendIDAliensGetNotFound) aPIV1ChallengeBackendIDAliensGetRes() {}

type APIV1ChallengeBackendIDAliensGetOKApplicationJSON []APIV1ChallengeBackendIDAliensGetOKItem

func (*APIV1ChallengeBackendIDAliensGetOKApplicationJSON) aPIV1ChallengeBackendIDAliensGetRes() {}

type APIV1ChallengeBackendIDAliensGetOKItem struct {
	Aliens []APIV1ChallengeBackendIDAliensGetOKItemAliensItem `json:"aliens"`
	Hp     int                                                `json:"hp"`
}

// GetAliens returns the value of Aliens.
func (s *APIV1ChallengeBackendIDAliensGetOKItem) GetAliens() []APIV1ChallengeBackendIDAliensGetOKItemAliensItem {
	return s.Aliens
}

// GetHp returns the value of Hp.
func (s *APIV1ChallengeBackendIDAliensGetOKItem) GetHp() int {
	return s.Hp
}

// SetAliens sets the value of Aliens.
func (s *APIV1ChallengeBackendIDAliensGetOKItem) SetAliens(val []APIV1ChallengeBackendIDAliensGetOKItemAliensItem) {
	s.Aliens = val
}

// SetHp sets the value of Hp.
func (s *APIV1ChallengeBackendIDAliensGetOKItem) SetHp(val int) {
	s.Hp = val
}

type APIV1ChallengeBackendIDAliensGetOKItemAliensItem struct {
	Hp  int `json:"hp"`
	Atk int `json:"atk"`
}

// GetHp returns the value of Hp.
func (s *APIV1ChallengeBackendIDAliensGetOKItemAliensItem) GetHp() int {
	return s.Hp
}

// GetAtk returns the value of Atk.
func (s *APIV1ChallengeBackendIDAliensGetOKItemAliensItem) GetAtk() int {
	return s.Atk
}

// SetHp sets the value of Hp.
func (s *APIV1ChallengeBackendIDAliensGetOKItemAliensItem) SetHp(val int) {
	s.Hp = val
}

// SetAtk sets the value of Atk.
func (s *APIV1ChallengeBackendIDAliensGetOKItemAliensItem) SetAtk(val int) {
	s.Atk = val
}

type APIV1ChallengeBackendIDAliensGetUnauthorized struct {
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *APIV1ChallengeBackendIDAliensGetUnauthorized) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *APIV1ChallengeBackendIDAliensGetUnauthorized) SetMessage(val string) {
	s.Message = val
}

func (*APIV1ChallengeBackendIDAliensGetUnauthorized) aPIV1ChallengeBackendIDAliensGetRes() {}

type APIV1ChallengeBackendIDAliensSubmitPostBadRequest struct {
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *APIV1ChallengeBackendIDAliensSubmitPostBadRequest) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *APIV1ChallengeBackendIDAliensSubmitPostBadRequest) SetMessage(val string) {
	s.Message = val
}

func (*APIV1ChallengeBackendIDAliensSubmitPostBadRequest) aPIV1ChallengeBackendIDAliensSubmitPostRes() {
}

type APIV1ChallengeBackendIDAliensSubmitPostInternalServerError struct {
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *APIV1ChallengeBackendIDAliensSubmitPostInternalServerError) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *APIV1ChallengeBackendIDAliensSubmitPostInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*APIV1ChallengeBackendIDAliensSubmitPostInternalServerError) aPIV1ChallengeBackendIDAliensSubmitPostRes() {
}

type APIV1ChallengeBackendIDAliensSubmitPostNotFound struct {
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *APIV1ChallengeBackendIDAliensSubmitPostNotFound) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *APIV1ChallengeBackendIDAliensSubmitPostNotFound) SetMessage(val string) {
	s.Message = val
}

func (*APIV1ChallengeBackendIDAliensSubmitPostNotFound) aPIV1ChallengeBackendIDAliensSubmitPostRes() {
}

// APIV1ChallengeBackendIDAliensSubmitPostOK represents sum type.
type APIV1ChallengeBackendIDAliensSubmitPostOK struct {
	Type                                       APIV1ChallengeBackendIDAliensSubmitPostOKType // switch on this field
	APIV1ChallengeBackendIDAliensSubmitPostOK0 APIV1ChallengeBackendIDAliensSubmitPostOK0
	APIV1ChallengeBackendIDAliensSubmitPostOK1 APIV1ChallengeBackendIDAliensSubmitPostOK1
}

// APIV1ChallengeBackendIDAliensSubmitPostOKType is oneOf type of APIV1ChallengeBackendIDAliensSubmitPostOK.
type APIV1ChallengeBackendIDAliensSubmitPostOKType string

// Possible values for APIV1ChallengeBackendIDAliensSubmitPostOKType.
const (
	APIV1ChallengeBackendIDAliensSubmitPostOK0APIV1ChallengeBackendIDAliensSubmitPostOK APIV1ChallengeBackendIDAliensSubmitPostOKType = "APIV1ChallengeBackendIDAliensSubmitPostOK0"
	APIV1ChallengeBackendIDAliensSubmitPostOK1APIV1ChallengeBackendIDAliensSubmitPostOK APIV1ChallengeBackendIDAliensSubmitPostOKType = "APIV1ChallengeBackendIDAliensSubmitPostOK1"
)

// IsAPIV1ChallengeBackendIDAliensSubmitPostOK0 reports whether APIV1ChallengeBackendIDAliensSubmitPostOK is APIV1ChallengeBackendIDAliensSubmitPostOK0.
func (s APIV1ChallengeBackendIDAliensSubmitPostOK) IsAPIV1ChallengeBackendIDAliensSubmitPostOK0() bool {
	return s.Type == APIV1ChallengeBackendIDAliensSubmitPostOK0APIV1ChallengeBackendIDAliensSubmitPostOK
}

// IsAPIV1ChallengeBackendIDAliensSubmitPostOK1 reports whether APIV1ChallengeBackendIDAliensSubmitPostOK is APIV1ChallengeBackendIDAliensSubmitPostOK1.
func (s APIV1ChallengeBackendIDAliensSubmitPostOK) IsAPIV1ChallengeBackendIDAliensSubmitPostOK1() bool {
	return s.Type == APIV1ChallengeBackendIDAliensSubmitPostOK1APIV1ChallengeBackendIDAliensSubmitPostOK
}

// SetAPIV1ChallengeBackendIDAliensSubmitPostOK0 sets APIV1ChallengeBackendIDAliensSubmitPostOK to APIV1ChallengeBackendIDAliensSubmitPostOK0.
func (s *APIV1ChallengeBackendIDAliensSubmitPostOK) SetAPIV1ChallengeBackendIDAliensSubmitPostOK0(v APIV1ChallengeBackendIDAliensSubmitPostOK0) {
	s.Type = APIV1ChallengeBackendIDAliensSubmitPostOK0APIV1ChallengeBackendIDAliensSubmitPostOK
	s.APIV1ChallengeBackendIDAliensSubmitPostOK0 = v
}

// GetAPIV1ChallengeBackendIDAliensSubmitPostOK0 returns APIV1ChallengeBackendIDAliensSubmitPostOK0 and true boolean if APIV1ChallengeBackendIDAliensSubmitPostOK is APIV1ChallengeBackendIDAliensSubmitPostOK0.
func (s APIV1ChallengeBackendIDAliensSubmitPostOK) GetAPIV1ChallengeBackendIDAliensSubmitPostOK0() (v APIV1ChallengeBackendIDAliensSubmitPostOK0, ok bool) {
	if !s.IsAPIV1ChallengeBackendIDAliensSubmitPostOK0() {
		return v, false
	}
	return s.APIV1ChallengeBackendIDAliensSubmitPostOK0, true
}

// NewAPIV1ChallengeBackendIDAliensSubmitPostOK0APIV1ChallengeBackendIDAliensSubmitPostOK returns new APIV1ChallengeBackendIDAliensSubmitPostOK from APIV1ChallengeBackendIDAliensSubmitPostOK0.
func NewAPIV1ChallengeBackendIDAliensSubmitPostOK0APIV1ChallengeBackendIDAliensSubmitPostOK(v APIV1ChallengeBackendIDAliensSubmitPostOK0) APIV1ChallengeBackendIDAliensSubmitPostOK {
	var s APIV1ChallengeBackendIDAliensSubmitPostOK
	s.SetAPIV1ChallengeBackendIDAliensSubmitPostOK0(v)
	return s
}

// SetAPIV1ChallengeBackendIDAliensSubmitPostOK1 sets APIV1ChallengeBackendIDAliensSubmitPostOK to APIV1ChallengeBackendIDAliensSubmitPostOK1.
func (s *APIV1ChallengeBackendIDAliensSubmitPostOK) SetAPIV1ChallengeBackendIDAliensSubmitPostOK1(v APIV1ChallengeBackendIDAliensSubmitPostOK1) {
	s.Type = APIV1ChallengeBackendIDAliensSubmitPostOK1APIV1ChallengeBackendIDAliensSubmitPostOK
	s.APIV1ChallengeBackendIDAliensSubmitPostOK1 = v
}

// GetAPIV1ChallengeBackendIDAliensSubmitPostOK1 returns APIV1ChallengeBackendIDAliensSubmitPostOK1 and true boolean if APIV1ChallengeBackendIDAliensSubmitPostOK is APIV1ChallengeBackendIDAliensSubmitPostOK1.
func (s APIV1ChallengeBackendIDAliensSubmitPostOK) GetAPIV1ChallengeBackendIDAliensSubmitPostOK1() (v APIV1ChallengeBackendIDAliensSubmitPostOK1, ok bool) {
	if !s.IsAPIV1ChallengeBackendIDAliensSubmitPostOK1() {
		return v, false
	}
	return s.APIV1ChallengeBackendIDAliensSubmitPostOK1, true
}

// NewAPIV1ChallengeBackendIDAliensSubmitPostOK1APIV1ChallengeBackendIDAliensSubmitPostOK returns new APIV1ChallengeBackendIDAliensSubmitPostOK from APIV1ChallengeBackendIDAliensSubmitPostOK1.
func NewAPIV1ChallengeBackendIDAliensSubmitPostOK1APIV1ChallengeBackendIDAliensSubmitPostOK(v APIV1ChallengeBackendIDAliensSubmitPostOK1) APIV1ChallengeBackendIDAliensSubmitPostOK {
	var s APIV1ChallengeBackendIDAliensSubmitPostOK
	s.SetAPIV1ChallengeBackendIDAliensSubmitPostOK1(v)
	return s
}

func (*APIV1ChallengeBackendIDAliensSubmitPostOK) aPIV1ChallengeBackendIDAliensSubmitPostRes() {}

type APIV1ChallengeBackendIDAliensSubmitPostOK0 struct {
	Valid OptBool `json:"valid"`
	Score OptInt  `json:"score"`
}

// GetValid returns the value of Valid.
func (s *APIV1ChallengeBackendIDAliensSubmitPostOK0) GetValid() OptBool {
	return s.Valid
}

// GetScore returns the value of Score.
func (s *APIV1ChallengeBackendIDAliensSubmitPostOK0) GetScore() OptInt {
	return s.Score
}

// SetValid sets the value of Valid.
func (s *APIV1ChallengeBackendIDAliensSubmitPostOK0) SetValid(val OptBool) {
	s.Valid = val
}

// SetScore sets the value of Score.
func (s *APIV1ChallengeBackendIDAliensSubmitPostOK0) SetScore(val OptInt) {
	s.Score = val
}

type APIV1ChallengeBackendIDAliensSubmitPostOK1 struct {
	Valid  OptBool   `json:"valid"`
	Reason OptString `json:"reason"`
}

// GetValid returns the value of Valid.
func (s *APIV1ChallengeBackendIDAliensSubmitPostOK1) GetValid() OptBool {
	return s.Valid
}

// GetReason returns the value of Reason.
func (s *APIV1ChallengeBackendIDAliensSubmitPostOK1) GetReason() OptString {
	return s.Reason
}

// SetValid sets the value of Valid.
func (s *APIV1ChallengeBackendIDAliensSubmitPostOK1) SetValid(val OptBool) {
	s.Valid = val
}

// SetReason sets the value of Reason.
func (s *APIV1ChallengeBackendIDAliensSubmitPostOK1) SetReason(val OptString) {
	s.Reason = val
}

type APIV1ChallengeBackendIDAliensSubmitPostReqItemItem string

const (
	APIV1ChallengeBackendIDAliensSubmitPostReqItemItemVolley        APIV1ChallengeBackendIDAliensSubmitPostReqItemItem = "volley"
	APIV1ChallengeBackendIDAliensSubmitPostReqItemItemAlienAttack   APIV1ChallengeBackendIDAliensSubmitPostReqItemItem = "alienAttack"
	APIV1ChallengeBackendIDAliensSubmitPostReqItemItemFocusedShot   APIV1ChallengeBackendIDAliensSubmitPostReqItemItem = "focusedShot"
	APIV1ChallengeBackendIDAliensSubmitPostReqItemItemFocusedVolley APIV1ChallengeBackendIDAliensSubmitPostReqItemItem = "focusedVolley"
)

// AllValues returns all APIV1ChallengeBackendIDAliensSubmitPostReqItemItem values.
func (APIV1ChallengeBackendIDAliensSubmitPostReqItemItem) AllValues() []APIV1ChallengeBackendIDAliensSubmitPostReqItemItem {
	return []APIV1ChallengeBackendIDAliensSubmitPostReqItemItem{
		APIV1ChallengeBackendIDAliensSubmitPostReqItemItemVolley,
		APIV1ChallengeBackendIDAliensSubmitPostReqItemItemAlienAttack,
		APIV1ChallengeBackendIDAliensSubmitPostReqItemItemFocusedShot,
		APIV1ChallengeBackendIDAliensSubmitPostReqItemItemFocusedVolley,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s APIV1ChallengeBackendIDAliensSubmitPostReqItemItem) MarshalText() ([]byte, error) {
	switch s {
	case APIV1ChallengeBackendIDAliensSubmitPostReqItemItemVolley:
		return []byte(s), nil
	case APIV1ChallengeBackendIDAliensSubmitPostReqItemItemAlienAttack:
		return []byte(s), nil
	case APIV1ChallengeBackendIDAliensSubmitPostReqItemItemFocusedShot:
		return []byte(s), nil
	case APIV1ChallengeBackendIDAliensSubmitPostReqItemItemFocusedVolley:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *APIV1ChallengeBackendIDAliensSubmitPostReqItemItem) UnmarshalText(data []byte) error {
	switch APIV1ChallengeBackendIDAliensSubmitPostReqItemItem(data) {
	case APIV1ChallengeBackendIDAliensSubmitPostReqItemItemVolley:
		*s = APIV1ChallengeBackendIDAliensSubmitPostReqItemItemVolley
		return nil
	case APIV1ChallengeBackendIDAliensSubmitPostReqItemItemAlienAttack:
		*s = APIV1ChallengeBackendIDAliensSubmitPostReqItemItemAlienAttack
		return nil
	case APIV1ChallengeBackendIDAliensSubmitPostReqItemItemFocusedShot:
		*s = APIV1ChallengeBackendIDAliensSubmitPostReqItemItemFocusedShot
		return nil
	case APIV1ChallengeBackendIDAliensSubmitPostReqItemItemFocusedVolley:
		*s = APIV1ChallengeBackendIDAliensSubmitPostReqItemItemFocusedVolley
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type APIV1ChallengeBackendIDAliensSubmitPostTooManyRequests struct {
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *APIV1ChallengeBackendIDAliensSubmitPostTooManyRequests) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *APIV1ChallengeBackendIDAliensSubmitPostTooManyRequests) SetMessage(val string) {
	s.Message = val
}

func (*APIV1ChallengeBackendIDAliensSubmitPostTooManyRequests) aPIV1ChallengeBackendIDAliensSubmitPostRes() {
}

type APIV1ChallengeFrontendIDAliensGetBadRequest struct {
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *APIV1ChallengeFrontendIDAliensGetBadRequest) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *APIV1ChallengeFrontendIDAliensGetBadRequest) SetMessage(val string) {
	s.Message = val
}

func (*APIV1ChallengeFrontendIDAliensGetBadRequest) aPIV1ChallengeFrontendIDAliensGetRes() {}

type APIV1ChallengeFrontendIDAliensGetInternalServerError struct {
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *APIV1ChallengeFrontendIDAliensGetInternalServerError) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *APIV1ChallengeFrontendIDAliensGetInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*APIV1ChallengeFrontendIDAliensGetInternalServerError) aPIV1ChallengeFrontendIDAliensGetRes() {}

type APIV1ChallengeFrontendIDAliensGetNotFound struct {
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *APIV1ChallengeFrontendIDAliensGetNotFound) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *APIV1ChallengeFrontendIDAliensGetNotFound) SetMessage(val string) {
	s.Message = val
}

func (*APIV1ChallengeFrontendIDAliensGetNotFound) aPIV1ChallengeFrontendIDAliensGetRes() {}

type APIV1ChallengeFrontendIDAliensGetOKApplicationJSON []APIV1ChallengeFrontendIDAliensGetOKItem

func (*APIV1ChallengeFrontendIDAliensGetOKApplicationJSON) aPIV1ChallengeFrontendIDAliensGetRes() {}

type APIV1ChallengeFrontendIDAliensGetOKItem struct {
	// UUID of the alien.
	ID uuid.UUID `json:"id"`
	// Name of the alien.
	Name string `json:"name"`
	// The rank of the alien.
	Type APIV1ChallengeFrontendIDAliensGetOKItemType `json:"type"`
	// Profile picture URL of the alien.
	URL url.URL `json:"url"`
	// Combat description of the alien.
	Stats APIV1ChallengeFrontendIDAliensGetOKItemStats `json:"stats"`
}

// GetID returns the value of ID.
func (s *APIV1ChallengeFrontendIDAliensGetOKItem) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *APIV1ChallengeFrontendIDAliensGetOKItem) GetName() string {
	return s.Name
}

// GetType returns the value of Type.
func (s *APIV1ChallengeFrontendIDAliensGetOKItem) GetType() APIV1ChallengeFrontendIDAliensGetOKItemType {
	return s.Type
}

// GetURL returns the value of URL.
func (s *APIV1ChallengeFrontendIDAliensGetOKItem) GetURL() url.URL {
	return s.URL
}

// GetStats returns the value of Stats.
func (s *APIV1ChallengeFrontendIDAliensGetOKItem) GetStats() APIV1ChallengeFrontendIDAliensGetOKItemStats {
	return s.Stats
}

// SetID sets the value of ID.
func (s *APIV1ChallengeFrontendIDAliensGetOKItem) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *APIV1ChallengeFrontendIDAliensGetOKItem) SetName(val string) {
	s.Name = val
}

// SetType sets the value of Type.
func (s *APIV1ChallengeFrontendIDAliensGetOKItem) SetType(val APIV1ChallengeFrontendIDAliensGetOKItemType) {
	s.Type = val
}

// SetURL sets the value of URL.
func (s *APIV1ChallengeFrontendIDAliensGetOKItem) SetURL(val url.URL) {
	s.URL = val
}

// SetStats sets the value of Stats.
func (s *APIV1ChallengeFrontendIDAliensGetOKItem) SetStats(val APIV1ChallengeFrontendIDAliensGetOKItemStats) {
	s.Stats = val
}

// Combat description of the alien.
type APIV1ChallengeFrontendIDAliensGetOKItemStats struct {
	Atk int `json:"atk"`
	Hp  int `json:"hp"`
	Spd int `json:"spd"`
}

// GetAtk returns the value of Atk.
func (s *APIV1ChallengeFrontendIDAliensGetOKItemStats) GetAtk() int {
	return s.Atk
}

// GetHp returns the value of Hp.
func (s *APIV1ChallengeFrontendIDAliensGetOKItemStats) GetHp() int {
	return s.Hp
}

// GetSpd returns the value of Spd.
func (s *APIV1ChallengeFrontendIDAliensGetOKItemStats) GetSpd() int {
	return s.Spd
}

// SetAtk sets the value of Atk.
func (s *APIV1ChallengeFrontendIDAliensGetOKItemStats) SetAtk(val int) {
	s.Atk = val
}

// SetHp sets the value of Hp.
func (s *APIV1ChallengeFrontendIDAliensGetOKItemStats) SetHp(val int) {
	s.Hp = val
}

// SetSpd sets the value of Spd.
func (s *APIV1ChallengeFrontendIDAliensGetOKItemStats) SetSpd(val int) {
	s.Spd = val
}

// The rank of the alien.
type APIV1ChallengeFrontendIDAliensGetOKItemType string

const (
	APIV1ChallengeFrontendIDAliensGetOKItemTypeRegular APIV1ChallengeFrontendIDAliensGetOKItemType = "Regular"
	APIV1ChallengeFrontendIDAliensGetOKItemTypeElite   APIV1ChallengeFrontendIDAliensGetOKItemType = "Elite"
	APIV1ChallengeFrontendIDAliensGetOKItemTypeBoss    APIV1ChallengeFrontendIDAliensGetOKItemType = "Boss"
)

// AllValues returns all APIV1ChallengeFrontendIDAliensGetOKItemType values.
func (APIV1ChallengeFrontendIDAliensGetOKItemType) AllValues() []APIV1ChallengeFrontendIDAliensGetOKItemType {
	return []APIV1ChallengeFrontendIDAliensGetOKItemType{
		APIV1ChallengeFrontendIDAliensGetOKItemTypeRegular,
		APIV1ChallengeFrontendIDAliensGetOKItemTypeElite,
		APIV1ChallengeFrontendIDAliensGetOKItemTypeBoss,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s APIV1ChallengeFrontendIDAliensGetOKItemType) MarshalText() ([]byte, error) {
	switch s {
	case APIV1ChallengeFrontendIDAliensGetOKItemTypeRegular:
		return []byte(s), nil
	case APIV1ChallengeFrontendIDAliensGetOKItemTypeElite:
		return []byte(s), nil
	case APIV1ChallengeFrontendIDAliensGetOKItemTypeBoss:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *APIV1ChallengeFrontendIDAliensGetOKItemType) UnmarshalText(data []byte) error {
	switch APIV1ChallengeFrontendIDAliensGetOKItemType(data) {
	case APIV1ChallengeFrontendIDAliensGetOKItemTypeRegular:
		*s = APIV1ChallengeFrontendIDAliensGetOKItemTypeRegular
		return nil
	case APIV1ChallengeFrontendIDAliensGetOKItemTypeElite:
		*s = APIV1ChallengeFrontendIDAliensGetOKItemTypeElite
		return nil
	case APIV1ChallengeFrontendIDAliensGetOKItemTypeBoss:
		*s = APIV1ChallengeFrontendIDAliensGetOKItemTypeBoss
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type APIV1MemberGetBadRequest struct {
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *APIV1MemberGetBadRequest) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *APIV1MemberGetBadRequest) SetMessage(val string) {
	s.Message = val
}

func (*APIV1MemberGetBadRequest) aPIV1MemberGetRes() {}

type APIV1MemberGetInternalServerError struct {
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *APIV1MemberGetInternalServerError) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *APIV1MemberGetInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*APIV1MemberGetInternalServerError) aPIV1MemberGetRes() {}

type APIV1MemberGetNotFound struct {
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *APIV1MemberGetNotFound) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *APIV1MemberGetNotFound) SetMessage(val string) {
	s.Message = val
}

func (*APIV1MemberGetNotFound) aPIV1MemberGetRes() {}

// Unique identifier associated with the registered northeastern email.
type APIV1MemberGetOK struct {
	ID uuid.UUID `json:"id"`
}

// GetID returns the value of ID.
func (s *APIV1MemberGetOK) GetID() uuid.UUID {
	return s.ID
}

// SetID sets the value of ID.
func (s *APIV1MemberGetOK) SetID(val uuid.UUID) {
	s.ID = val
}

func (*APIV1MemberGetOK) aPIV1MemberGetRes() {}

type APIV1MemberRegisterPostBadRequest struct {
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *APIV1MemberRegisterPostBadRequest) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *APIV1MemberRegisterPostBadRequest) SetMessage(val string) {
	s.Message = val
}

func (*APIV1MemberRegisterPostBadRequest) aPIV1MemberRegisterPostRes() {}

type APIV1MemberRegisterPostConflict struct {
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *APIV1MemberRegisterPostConflict) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *APIV1MemberRegisterPostConflict) SetMessage(val string) {
	s.Message = val
}

func (*APIV1MemberRegisterPostConflict) aPIV1MemberRegisterPostRes() {}

// Unique identifier associated with the registered northeastern email.
type APIV1MemberRegisterPostCreated struct {
	ID uuid.UUID `json:"id"`
}

// GetID returns the value of ID.
func (s *APIV1MemberRegisterPostCreated) GetID() uuid.UUID {
	return s.ID
}

// SetID sets the value of ID.
func (s *APIV1MemberRegisterPostCreated) SetID(val uuid.UUID) {
	s.ID = val
}

func (*APIV1MemberRegisterPostCreated) aPIV1MemberRegisterPostRes() {}

type APIV1MemberRegisterPostInternalServerError struct {
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *APIV1MemberRegisterPostInternalServerError) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *APIV1MemberRegisterPostInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*APIV1MemberRegisterPostInternalServerError) aPIV1MemberRegisterPostRes() {}

type APIV1MemberRegisterPostReq struct {
	// Must be a valid Northeastern email address.
	Email string `json:"email"`
	// Valid nuid, must be 9 digits in length.
	Nuid string `json:"nuid"`
}

// GetEmail returns the value of Email.
func (s *APIV1MemberRegisterPostReq) GetEmail() string {
	return s.Email
}

// GetNuid returns the value of Nuid.
func (s *APIV1MemberRegisterPostReq) GetNuid() string {
	return s.Nuid
}

// SetEmail sets the value of Email.
func (s *APIV1MemberRegisterPostReq) SetEmail(val string) {
	s.Email = val
}

// SetNuid sets the value of Nuid.
func (s *APIV1MemberRegisterPostReq) SetNuid(val string) {
	s.Nuid = val
}

type GetInternalServerError struct {
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *GetInternalServerError) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *GetInternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*GetInternalServerError) getRes() {}

type GetOK struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s GetOK) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, io.EOF
	}
	return s.Data.Read(p)
}

func (*GetOK) getRes() {}

type HealthcheckGetOK struct {
	Message HealthcheckGetOKMessage `json:"message"`
}

// GetMessage returns the value of Message.
func (s *HealthcheckGetOK) GetMessage() HealthcheckGetOKMessage {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *HealthcheckGetOK) SetMessage(val HealthcheckGetOKMessage) {
	s.Message = val
}

type HealthcheckGetOKMessage string

const (
	HealthcheckGetOKMessageOK HealthcheckGetOKMessage = "OK"
)

// AllValues returns all HealthcheckGetOKMessage values.
func (HealthcheckGetOKMessage) AllValues() []HealthcheckGetOKMessage {
	return []HealthcheckGetOKMessage{
		HealthcheckGetOKMessageOK,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s HealthcheckGetOKMessage) MarshalText() ([]byte, error) {
	switch s {
	case HealthcheckGetOKMessageOK:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *HealthcheckGetOKMessage) UnmarshalText(data []byte) error {
	switch HealthcheckGetOKMessage(data) {
	case HealthcheckGetOKMessageOK:
		*s = HealthcheckGetOKMessageOK
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// NewOptAPIV1MemberRegisterPostReq returns new OptAPIV1MemberRegisterPostReq with value set to v.
func NewOptAPIV1MemberRegisterPostReq(v APIV1MemberRegisterPostReq) OptAPIV1MemberRegisterPostReq {
	return OptAPIV1MemberRegisterPostReq{
		Value: v,
		Set:   true,
	}
}

// OptAPIV1MemberRegisterPostReq is optional APIV1MemberRegisterPostReq.
type OptAPIV1MemberRegisterPostReq struct {
	Value APIV1MemberRegisterPostReq
	Set   bool
}

// IsSet returns true if OptAPIV1MemberRegisterPostReq was set.
func (o OptAPIV1MemberRegisterPostReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAPIV1MemberRegisterPostReq) Reset() {
	var v APIV1MemberRegisterPostReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAPIV1MemberRegisterPostReq) SetTo(v APIV1MemberRegisterPostReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAPIV1MemberRegisterPostReq) Get() (v APIV1MemberRegisterPostReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAPIV1MemberRegisterPostReq) Or(d APIV1MemberRegisterPostReq) APIV1MemberRegisterPostReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}
