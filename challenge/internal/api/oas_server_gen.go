// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// APIV1RegisterGet implements GET /api/v1/register operation.
	//
	// GET /api/v1/register
	APIV1RegisterGet(ctx context.Context, req OptAPIV1RegisterGetReq) (*APIV1RegisterGetCreated, error)
	// Get implements GET / operation.
	//
	// API documentation.
	//
	// GET /
	Get(ctx context.Context) (GetOK, error)
	// HealthcheckGet implements GET /healthcheck operation.
	//
	// GET /healthcheck
	HealthcheckGet(ctx context.Context) (*HealthcheckGetOK, error)
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h Handler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		baseServer: s,
	}, nil
}
